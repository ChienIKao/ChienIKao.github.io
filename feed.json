{
    "version": "https://jsonfeed.org/version/1",
    "title": "Nothing is true, everything is permitted",
    "subtitle": "",
    "icon": "https://chienikao.github.io/images/favicon.ico",
    "description": "This is a note blog",
    "home_page_url": "https://chienikao.github.io",
    "items": [
        {
            "id": "https://chienikao.github.io/2023/04/20/uva/star1/uva579/",
            "url": "https://chienikao.github.io/2023/04/20/uva/star1/uva579/",
            "title": "uva 579 - Clock Hands",
            "date_published": "2023-04-20T08:45:42.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"題目連結\"><a class=\"anchor\" href=\"#題目連結\">#</a> 題目連結</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96ZXJvanVkZ2UudHcvU2hvd1Byb2JsZW0/cHJvYmxlbWlkPWQwOTU=\">ZeroJudge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvZXh0ZXJuYWwvNS9wNTc5LnBkZg==\">題目連結</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvaW5kZXgucGhwP29wdGlvbj1jb21fb25saW5lanVkZ2UmYW1wO0l0ZW1pZD04JmFtcDtjYXRlZ29yeT03JmFtcDtwYWdlPXNob3dfcHJvYmxlbSZhbXA7cHJvYmxlbT01MjA=\">Online Judge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudWRlYnVnLmNvbS9VVmEvNTc5\">uDebug</span></li>\n</ul>\n<h2 id=\"題目敘述\"><a class=\"anchor\" href=\"#題目敘述\">#</a> 題目敘述</h2>\n<p>The <a href=\"#%E8%A8%BB%E8%A7%A3\">medieval<sub>1</sub></a> interest in <a href=\"#%E8%A8%BB%E8%A7%A3\">mechanical contrivances<sub>2</sub></a> is well illustrated by the development of the mechanical<br>\nclock, the oldest of which is driven by weights and controlled by a verge, an <a href=\"#%E8%A8%BB%E8%A7%A3\">oscillating<sub>3</sub></a> arm engaging<br>\nwith a <a href=\"#%E8%A8%BB%E8%A7%A3\">gear<sub>4</sub></a> wheel. It dates back to 1386.</p>\n<p>Clocks driven by springs had appeared by the mid-15th century, making it possible to con- struct<br>\nmore compact mechanisms and preparing the way for the portable clock.</p>\n<p>English spring-driven pendulum clocks were first commonly kept on a small wall bracket and later<br>\non a shelf. Many bracket clocks contained a drawer to hold the winding key. The earliest bracket clocks,<br>\nmade for a period after 1660, were of architectural design, with pillars at the sides and a pediment on<br>\ntop.</p>\n<p>In 17th- and 18th-century France, the table clock became an object of monumental design, the best<br>\nexamples of which are minor works of sculpture.</p>\n<p>The longcase clocks (also called grandfather clocks) are tall pendulum clock enclosed in a wooden<br>\ncase that stands upon the floor and is typically from 6 to 7.5 feet (1.8 to 2.3 m) in height. Later, the<br>\nname “grandfather clock” became popular after the popular song “My Grandfather’s Clock,” written<br>\nin 1876 by Henry Clay Work.</p>\n<p>One of the first atomic clocks was an ammonia-controlled clock. It was built in 1949 at the National<br>\nBureau of Standards, Washington, D.C.; in this clock the frequency did not vary by more than one<br>\npart in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>8</mn></msup></mrow><annotation encoding=\"application/x-tex\">10^8</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">8</span></span></span></span></span></span></span></span></span></span></span>.</p>\n<p>Nuclear clocks are built using two clocks. The aggregate of atoms that emit the gamma radiation of<br>\nprecise frequency may be called the emitter clock; the group of atoms that absorb this radiation is the<br>\nabsorber clock. One pair of these nuclear clocks can detect energy changes of one part in 1014, being<br>\nabout 1,000 times more sensitive than the best atomic clock.</p>\n<p>The cesium clock is the most accurate type of clock yet developed. This device makes use of<br>\ntransitions between the spin states of the cesium nucleus and produces a frequency which is so regular<br>\nthat it has been adopted for establishing the time standard.</p>\n<p>The history of clocks is fascinating, but unrelated to this problem. In this problem, you are asked<br>\nto find the angle between the minute hand and the hour hand on a regular analog clock. Assume that<br>\nthe second hand, if there were one, would be pointing straight up at the 12. Give all angles as the<br>\nsmallest positive angles. For example 9:00 is 90 degrees; not -90 or 270 degrees.</p>\n<h2 id=\"input\"><a class=\"anchor\" href=\"#input\">#</a> Input</h2>\n<p>The input is a list of times in the form ‘H:M’, each on their own line, with  <code>1 ≤ H ≤ 12</code>  and<br>\n <code>00 ≤ M ≤ 59</code> . The input is terminated with the time ‘0:00’. Note that  <code>H</code>  may be represented with 1<br>\nor 2 digits (for 1–9 or 10–12, respectively);  <code>M</code>  is always represented with 2 digits (the input times are<br>\nwhat you typically see on a digital clock).</p>\n<h2 id=\"output\"><a class=\"anchor\" href=\"#output\">#</a> Output</h2>\n<p>The output <strong>displays the smallest positive angle in degrees between the hands for each time</strong>. The answer<br>\nshould between 0 degrees and 180 degrees for all input times. Display each angle on a line by itself in<br>\nthe same order as the input. The output should be rounded to the nearest 1/1000, i.e., three places<br>\nafter the decimal point should be printed.</p>\n<h2 id=\"sample-input\"><a class=\"anchor\" href=\"#sample-input\">#</a> Sample Input</h2>\n<blockquote>\n<p>12:00<br>\n9:00<br>\n8:10<br>\n0:00</p>\n</blockquote>\n<h2 id=\"sample-output\"><a class=\"anchor\" href=\"#sample-output\">#</a> Sample Output</h2>\n<blockquote>\n<p>0.000<br>\n90.000<br>\n175.000</p>\n</blockquote>\n<h2 id=\"code\"><a class=\"anchor\" href=\"#code\">#</a> Code</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">double</span> deg<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">180</span><span class=\"token punctuation\">,</span> <span class=\"token number\">210</span><span class=\"token punctuation\">,</span> <span class=\"token number\">240</span><span class=\"token punctuation\">,</span> <span class=\"token number\">270</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">330</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    string str<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">int</span> hr<span class=\"token punctuation\">,</span> min<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">getline</span><span class=\"token punctuation\">(</span>cin<span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>str <span class=\"token operator\">==</span> <span class=\"token string\">\"0:00\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        stringstream <span class=\"token function\">ss</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        string tok<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token function\">getline</span><span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">,</span> tok<span class=\"token punctuation\">,</span> <span class=\"token char\">':'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        hr <span class=\"token operator\">=</span> <span class=\"token function\">stoi</span><span class=\"token punctuation\">(</span>tok<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token function\">getline</span><span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">,</span> tok<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        min <span class=\"token operator\">=</span> <span class=\"token function\">stoi</span><span class=\"token punctuation\">(</span>tok<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">double</span> res <span class=\"token operator\">=</span> min <span class=\"token operator\">*</span> <span class=\"token number\">6.0</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>min <span class=\"token operator\">/</span> <span class=\"token number\">12.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span> <span class=\"token operator\">+</span> deg<span class=\"token punctuation\">[</span>hr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> res <span class=\"token operator\">*=</span> <span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res <span class=\"token operator\">></span> <span class=\"token number\">180</span><span class=\"token punctuation\">)</span> res <span class=\"token operator\">=</span> <span class=\"token number\">360.0</span> <span class=\"token operator\">-</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.3f\\n\"</span><span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"註解\"><a class=\"anchor\" href=\"#註解\">#</a> 註解</h2>\n<ol>\n<li><a href=\"#%E9%A1%8C%E7%9B%AE%E6%95%98%E8%BF%B0\">medieval 中世紀</a></li>\n<li><a href=\"#%E9%A1%8C%E7%9B%AE%E6%95%98%E8%BF%B0\">mechanical contrivances 機械裝置</a></li>\n<li><a href=\"#%E9%A1%8C%E7%9B%AE%E6%95%98%E8%BF%B0\">oscillating 擺動的</a></li>\n<li><a href=\"#%E9%A1%8C%E7%9B%AE%E6%95%98%E8%BF%B0\">gear 齒輪</a></li>\n</ol>\n",
            "tags": [
                "UVA",
                "Star1",
                "Star1",
                "CPE",
                "UVA"
            ]
        },
        {
            "id": "https://chienikao.github.io/2023/04/20/uva/star1/uva499/",
            "url": "https://chienikao.github.io/2023/04/20/uva/star1/uva499/",
            "title": "uva 499 - What’s The Frequency, Kenneth?",
            "date_published": "2023-04-20T07:25:04.000Z",
            "content_html": "<h2 id=\"題目連結\"><a class=\"anchor\" href=\"#題目連結\">#</a> 題目連結</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96ZXJvanVkZ2UudHcvU2hvd1Byb2JsZW0/cHJvYmxlbWlkPWU1MDM=\">ZeroJudge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvZXh0ZXJuYWwvNC9wNDk5LnBkZg==\">題目連結</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvaW5kZXgucGhwP29wdGlvbj1jb21fb25saW5lanVkZ2UmYW1wO0l0ZW1pZD04JmFtcDtjYXRlZ29yeT02JmFtcDtwYWdlPXNob3dfcHJvYmxlbSZhbXA7cHJvYmxlbT00NDA=\">Online Judge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudWRlYnVnLmNvbS9VVmEvNDk5\">uDebug</span></li>\n</ul>\n<h2 id=\"題目敘述\"><a class=\"anchor\" href=\"#題目敘述\">#</a> 題目敘述</h2>\n<p>#include &lt;stdio.h&gt;<br>\nmain() {<br>\nint i;<br>\nchar *suffix[]= { “st”, “nd”, “rd” };<br>\nchar *item[]= { “Unix” , “cat”, “sed”, “awk”, “grep”, “ed”, “vi”};<br>\nprintf(“In the beginning, there was nothing.\\n”);<br>\nfor (i= 0; i &lt; 7; i++)<br>\nprintf(“And on the %d%s day, God created %s. And it was good.\\n”,<br>\ni + 1, (i &lt; 3) ? suffix[i] : “th”, item[i]);<br>\n}</p>\n<p>But then God saw that vi led people into temptation. Instead of choosing the righteous ways of<br>\nmake, dbx, and RCS, people used long command lines, printf(), and tape backups.<br>\nSo God decreed, “I see that Engineers have thus defiled my vi. And so, I shall create emacs, an<br>\neditor more powerful than words. Further, for each instantiation vi hitherto, the Engineer responsible<br>\nshalt perform Penance. And lo, the Penance wilt be painful; there will be much wailing and gnushingof<br>\nteeth. The Engineer will read many lines of text. For each line of text, the Engineer must tell me which<br>\nletters occur the most frequently.”<br>\n“I charge you all with My Golden Rule: ’Friends shalt not let friends use vi’.”</p>\n<h2 id=\"input\"><a class=\"anchor\" href=\"#input\">#</a> Input</h2>\n<p>The input file consists of a lot of lines of text.</p>\n<h2 id=\"output\"><a class=\"anchor\" href=\"#output\">#</a> Output</h2>\n<p>A line of output should contain a list of <strong>letters that all occured with the highest frequency</strong> in the<br>\ncorresponding input line, followed by the frequency.<br>\nThe list of letters should be an alphabetical list of upper case letters followed by an alphabetical<br>\nlist of lower case letters.</p>\n<h2 id=\"sample-input\"><a class=\"anchor\" href=\"#sample-input\">#</a> Sample Input</h2>\n<blockquote>\n<p>When riding your bicycle backwards down a one-way street, if the<br>\nwheel falls of a canoe, how many ball bearings does it take to fill<br>\nup a water buffalo?<br>\nHello Howard.</p>\n</blockquote>\n<h2 id=\"sample-output\"><a class=\"anchor\" href=\"#sample-output\">#</a> Sample Output</h2>\n<blockquote>\n<p>e 6<br>\nal 7<br>\na 3<br>\nHlo 2</p>\n</blockquote>\n<h2 id=\"code\"><a class=\"anchor\" href=\"#code\">#</a> Code</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    string str<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getline</span><span class=\"token punctuation\">(</span>cin<span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        map<span class=\"token operator\">&lt;</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">></span> mp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> c <span class=\"token operator\">:</span> str<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isalpha</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            mp<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>   </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        map<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> string<span class=\"token operator\">></span> rc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">int</span> mx <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> m <span class=\"token operator\">:</span> mp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            mx <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>mx<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>second<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            rc<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">.</span>second<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">+</span> rc<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">.</span>second<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> m<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> rc<span class=\"token punctuation\">[</span>mx<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token char\">' '</span> <span class=\"token operator\">&lt;&lt;</span> mx <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "UVA",
                "Star1",
                "Star1",
                "CPE",
                "UVA"
            ]
        },
        {
            "id": "https://chienikao.github.io/2023/04/20/programming/CPP/cpp%20queue/",
            "url": "https://chienikao.github.io/2023/04/20/programming/CPP/cpp%20queue/",
            "title": "C++ - queue",
            "date_published": "2023-04-20T03:32:21.000Z",
            "content_html": "<p><code>queue</code>  是具有 <strong>FIFO (First In, First Out)</strong> 特性的容器配接器，應用在有<strong>先進先出</strong>的情形。<br>\n<strong>需要引入的標頭檔： <code>&lt;queue&gt;</code> </strong></p>\n<h2 id=\"初始化-queue\"><a class=\"anchor\" href=\"#初始化-queue\">#</a> 初始化 queue</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;queue></span></span></pre></td></tr><tr class=\"marked\"><td data-num=\"2\"></td><td><pre>queue<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> q<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"加入元素-push\"><a class=\"anchor\" href=\"#加入元素-push\">#</a> 加入元素 - push ()</h2>\n<p>把元素加進 queue 的尾部使用  <code>push()</code></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>queue<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> q<span class=\"token punctuation\">;</span></pre></td></tr><tr class=\"marked\"><td data-num=\"2\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>q = [1, 2, 3]</p>\n</blockquote>\n<h2 id=\"取出元素-pop\"><a class=\"anchor\" href=\"#取出元素-pop\">#</a> 取出元素 - pop ()</h2>\n<p>把元素從 queue 頭部取出用  <code>pop()</code> ，注意<strong>取出會將該元素從 queue 移除</strong>。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>queue<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> q<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr class=\"marked\"><td data-num=\"5\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>q = [2, 3]</p>\n</blockquote>\n<h2 id=\"取得元素\"><a class=\"anchor\" href=\"#取得元素\">#</a> 取得元素</h2>\n<h3 id=\"front\"><a class=\"anchor\" href=\"#front\">#</a> front()</h3>\n<p>取得 queue 的最頭部的元素使用  <code>front()</code> ，注意<strong>取得並不會將該元素從 queue 移除</strong>。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>queue<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> q<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"front: \"</span> <span class=\"token operator\">&lt;&lt;</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>front: 1</p>\n</blockquote>\n<h3 id=\"back\"><a class=\"anchor\" href=\"#back\">#</a> back()</h3>\n<p>取得 queue 的最尾巴的元素使用  <code>back()</code> 。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>queue<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> q<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"back: \"</span> <span class=\"token operator\">&lt;&lt;</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>back: 3</p>\n</blockquote>\n<h2 id=\"取得-queue-長度-size\"><a class=\"anchor\" href=\"#取得-queue-長度-size\">#</a> 取得 queue 長度 - size ()</h2>\n<p>取得 queue 目前裡面有幾個元素使用  <code>size()</code> 。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>queue<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> q<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr class=\"marked\"><td data-num=\"5\"></td><td><pre>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"size: \"</span> <span class=\"token operator\">&lt;&lt;</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>size: 3</p>\n</blockquote>\n<h2 id=\"清空-queue-clear\"><a class=\"anchor\" href=\"#清空-queue-clear\">#</a> 清空 queue - clear ()</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>queue<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> q<span class=\"token punctuation\">;</span></pre></td></tr><tr class=\"marked\"><td data-num=\"2\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"確認-queue-是否為空-empty\"><a class=\"anchor\" href=\"#確認-queue-是否為空-empty\">#</a> 確認 queue 是否為空 - empty ()</h2>\n<p>確認 queue 是否為空使用  <code>empty()</code></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>queue<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> q<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr class=\"marked\"><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"empty\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">else</span> cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Not empty\"</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>empty</p>\n</blockquote>\n<h2 id=\"參考資料\"><a class=\"anchor\" href=\"#參考資料\">#</a> 參考資料</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaGVuZ3l1NzY5Ny5naXRodWIuaW8vc3RkLXF1ZXVlLw==\">https://shengyu7697.github.io/std-queue/</span></li>\n</ul>\n",
            "tags": [
                "Programming",
                "C/C++",
                "C/C++",
                "queue",
                "Data Structure"
            ]
        },
        {
            "id": "https://chienikao.github.io/2023/04/20/leetcode/medium/662%20Maximum%20Width%20of%20Binary%20Tree/",
            "url": "https://chienikao.github.io/2023/04/20/leetcode/medium/662%20Maximum%20Width%20of%20Binary%20Tree/",
            "title": "662. Maximum Width of Binary Tree",
            "date_published": "2023-04-20T02:46:44.000Z",
            "content_html": "<h2 id=\"題目敘述\"><a class=\"anchor\" href=\"#題目敘述\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbWF4aW11bS13aWR0aC1vZi1iaW5hcnktdHJlZS8=\">題目敘述</span></h2>\n<p>Given the  <code>root</code>  of a binary tree, return <em>the maximum width of the given tree</em>.</p>\n<p>The <strong>maximum width</strong> of a tree is the maximum <strong>width</strong> among all levels.</p>\n<p>The <strong>width</strong> of one level is defined as the length between the end-nodes (the leftmost and rightmost non-null nodes), where the null nodes between the end-nodes that would be present in a complete binary tree extending down to that level are also counted into the length calculation.</p>\n<p>It is <strong>guaranteed</strong> that the answer will in the range of a <strong>32-bit</strong> signed integer.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1:</h3>\n<p><img data-src=\"https://i.imgur.com/BjIsiaN.png\" alt=\"\"></p>\n<blockquote>\n<p><strong>Input:</strong> root = [1,3,2,5,3,null,9]<br>\n<strong>Output:</strong> 4<br>\n<strong>Explanation:</strong> The maximum width exists in the third level with length 4 (5,3,null,9).</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<p><img data-src=\"https://i.imgur.com/uRAtVHp.png\" alt=\"\"></p>\n<blockquote>\n<p><strong>Input:</strong> root = [1,3,2,5,null,null,9,6,null,7]<br>\n<strong>Output:</strong> 7<br>\n<strong>Explanation:</strong> The maximum width exists in the fourth level with length 7 (6,null,null,null,null,null,7).</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3:</h3>\n<p><img data-src=\"https://i.imgur.com/ykiXotC.png\" alt=\"\"></p>\n<blockquote>\n<p><strong>Input:</strong> root = [1,3,2,5]<br>\n<strong>Output:</strong> 2<br>\n<strong>Explanation:</strong> The maximum width exists in the second level with length 2 (3,2).</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"code\"><a class=\"anchor\" href=\"#code\">#</a> Code</h2>\n<div class=\"tab\" data-id=\"id\" data-title=\"C++\">\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">widthOfBinaryTree</span><span class=\"token punctuation\">(</span>TreeNode<span class=\"token operator\">*</span> root<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>root<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">int</span> res <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        queue<span class=\"token operator\">&lt;</span>pair<span class=\"token operator\">&lt;</span>TreeNode<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">>></span> q<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>root<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">int</span> start <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>second<span class=\"token punctuation\">,</span> end <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>second<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            res <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> end <span class=\"token operator\">-</span> start <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token keyword\">auto</span> p <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                q<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                TreeNode<span class=\"token operator\">*</span> tmp <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">int</span> idx <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>second<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tmp<span class=\"token operator\">-></span>left<span class=\"token punctuation\">)</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>tmp<span class=\"token operator\">-></span>left<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> idx <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tmp<span class=\"token operator\">-></span>right<span class=\"token punctuation\">)</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>tmp<span class=\"token operator\">-></span>right<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> idx <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LinkedList</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Queue</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">widthOfBinaryTree</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TreeNode</span> root<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>root <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">Queue</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Pair</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TreeNode</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> queue <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        queue<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Pair</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">int</span> maxWidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>queue<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">int</span> levelLength <span class=\"token operator\">=</span> queue<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">int</span> levelStart <span class=\"token operator\">=</span> queue<span class=\"token punctuation\">.</span><span class=\"token function\">peek</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> levelLength<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token class-name\">Pair</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TreeNode</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> pair <span class=\"token operator\">=</span> queue<span class=\"token punctuation\">.</span><span class=\"token function\">poll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token class-name\">TreeNode</span> node <span class=\"token operator\">=</span> pair<span class=\"token punctuation\">.</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                index <span class=\"token operator\">=</span> pair<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>left <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                    queue<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Pair</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>right <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                    queue<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Pair</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>index<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            maxWidth <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>maxWidth<span class=\"token punctuation\">,</span> index <span class=\"token operator\">-</span> levelStart <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">return</span> maxWidth<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id\" data-title=\"Python\">\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">widthOfBinaryTree</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">:</span> Optional<span class=\"token punctuation\">[</span>TreeNode<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> root<span class=\"token punctuation\">:</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        q <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        res <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">while</span> q<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            l <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            _<span class=\"token punctuation\">,</span> start <span class=\"token operator\">=</span> q<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                node<span class=\"token punctuation\">,</span> idx <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token keyword\">if</span> node<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">:</span> q<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token keyword\">if</span> node<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">:</span> q<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> idx <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            res <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> idx <span class=\"token operator\">-</span> start <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> res</pre></td></tr></table></figure></div>\n",
            "tags": [
                "leetcode",
                "Medium",
                "leetcode",
                "Medium",
                "Tree",
                "Depth-First Search",
                "Binary Tree",
                "Breadth-First Search"
            ]
        },
        {
            "id": "https://chienikao.github.io/2023/04/19/programming/CPP/cpp%20set/",
            "url": "https://chienikao.github.io/2023/04/19/programming/CPP/cpp%20set/",
            "title": "C++ - Set",
            "date_published": "2023-04-19T12:08:29.000Z",
            "content_html": "<p>C++  <code>set</code>  是一個關聯式容器， <code>set</code>  容器裡面的元素是<strong>唯一</strong>的，具有<strong>不重複</strong>的特性，而且是<strong>有排序</strong>的容器， <code>set</code>  容器裡面元素的值是<strong>不可修改</strong>，但 set 容器<strong>可以插入或刪除</strong>元素， <code>set</code>  的實作方式通常是用紅黑樹 (red-black tree) 實作的。</p>\n<h2 id=\"set-初始化\"><a class=\"anchor\" href=\"#set-初始化\">#</a> set 初始化</h2>\n<p>C++ set 初始化用法如下，<br>\n 需要引入  <code>include&lt;set&gt;</code>  標頭檔</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>set<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> st<span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>從 c-style 陣列來初始化</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>set<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">st</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> arr <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"set-插入元素\"><a class=\"anchor\" href=\"#set-插入元素\">#</a> set 插入元素</h2>\n<p>set 使用  <code>insert()</code>  來插入元素。<br>\n用法如下，</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>set<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> st<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>st<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>st<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>st<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>st<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>st<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"set-讀取元素\"><a class=\"anchor\" href=\"#set-讀取元素\">#</a> set 讀取元素</h2>\n<p>由於 set 容器中沒有  <code>at()</code>  成員函數，也沒有  <code>operator[]</code> ，set 無法單純地隨機讀取某元素，但能透過 iterator 來讀取元素。</p>\n<h3 id=\"迴圈遍歷-set-容器\"><a class=\"anchor\" href=\"#迴圈遍歷-set-容器\">#</a> 迴圈遍歷 set 容器</h3>\n<p>迴圈遍歷 set 容器的方式有幾種，<br>\n以下先介紹使用 range-based for loop 來遍歷 set 容器並且印出來，這邊故意將元素不按順序初始化以及插入，然後我們再來觀察看看是不是 set 會將其排序，同時看看是不是具有不重複性，</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>set<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> st <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>st<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>st<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>st<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>st<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>st<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> s<span class=\"token operator\">:</span> st<span class=\"token punctuation\">)</span> cout <span class=\"token operator\">&lt;&lt;</span> s <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>輸出內容如下，從這個輸出結果發現是元素是<strong>由小到大排列</strong>，所以 set 容器裡面真的是會幫你排序的，在<strong>插入元素的同時會根據元素來進行排序</strong>，並且沒有元素重複。</p>\n<blockquote>\n<p>1 2 3 4 5</p>\n</blockquote>\n<p>迴圈也可以使用<strong>迭代器</strong>的方式，用法如下，</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr class=\"marked\"><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>set<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token double-colon punctuation\">::</span>iterator it <span class=\"token operator\">=</span> st<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> it <span class=\"token operator\">!=</span> st<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> it<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token operator\">*</span>it <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// or</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr class=\"marked\"><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> it <span class=\"token operator\">=</span> st<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> it <span class=\"token operator\">!=</span> st<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> it<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token operator\">*</span>it <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>如果要從後面印到前面的話，可以使用<strong>反向迭代器</strong>，如果嫌 iterator 迭代器名稱太長的話可以善用  <code>auto</code>  關鍵字讓編譯器去推導該變數類型，用法如下</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> it <span class=\"token operator\">=</span> st<span class=\"token punctuation\">.</span><span class=\"token function\">rbegin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> it <span class=\"token operator\">!=</span> st<span class=\"token punctuation\">.</span><span class=\"token function\">rend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> it<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token operator\">*</span>it <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>使用反向迭代器的輸出結果如下</p>\n<blockquote>\n<p>5 4 3 2 1</p>\n</blockquote>\n<h2 id=\"set-刪除指定元素\"><a class=\"anchor\" href=\"#set-刪除指定元素\">#</a> set 刪除指定元素</h2>\n<p>set 刪除指定元素要使用  <code>erase()</code></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>set<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> st<span class=\"token punctuation\">&#123;</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr class=\"marked\"><td data-num=\"3\"></td><td><pre>st<span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> s<span class=\"token operator\">:</span> st<span class=\"token punctuation\">)</span> cout <span class=\"token operator\">&lt;&lt;</span> s <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>結果如下，</p>\n<blockquote>\n<p>4 6 8</p>\n</blockquote>\n<p>那 set 刪除不存在的元素呢？</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>set<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> st<span class=\"token punctuation\">&#123;</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">auto</span> ret <span class=\"token operator\">=</span> st<span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>cout <span class=\"token operator\">&lt;&lt;</span> ret <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> s <span class=\"token operator\">:</span> st<span class=\"token punctuation\">)</span> cout <span class=\"token operator\">&lt;&lt;</span> s <span class=\"token operator\">&lt;&lt;</span> <span class=\"token char\">' '</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr class=\"marked\"><td data-num=\"6\"></td><td><pre>ret <span class=\"token operator\">=</span> st<span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>cout <span class=\"token operator\">&lt;&lt;</span> endl <span class=\"token operator\">&lt;&lt;</span> ret <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> s <span class=\"token operator\">:</span> st<span class=\"token punctuation\">)</span> cout <span class=\"token operator\">&lt;&lt;</span> s <span class=\"token operator\">&lt;&lt;</span> <span class=\"token char\">' '</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>結果是可以這麼作的，不會發生什麼事。另外  <code>erase()</code>  <strong>會回傳告訴你刪除了幾個元素</strong>。</p>\n<blockquote>\n<p>1<br>\n4 6 8<br>\n0<br>\n4 6 8</p>\n</blockquote>\n<h2 id=\"清空-set-元素\"><a class=\"anchor\" href=\"#清空-set-元素\">#</a> 清空 set 元素</h2>\n<p>要清空 set 容器的的話，要使用  <code>clear()</code> ，</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>set<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> st<span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr class=\"marked\"><td data-num=\"2\"></td><td><pre>st<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"set-判斷元素是否存在\"><a class=\"anchor\" href=\"#set-判斷元素是否存在\">#</a> set 判斷元素是否存在</h2>\n<p>set 要判斷指定元素是否存在的話有兩種方法，</p>\n<h3 id=\"count\"><a class=\"anchor\" href=\"#count\">#</a> count()</h3>\n<p>第一種方法是使用  <code>count()</code>  成員函式，<strong> <code>count()</code>  存在該元素的話回傳  <code>1</code> ，不存在的話回傳  <code>0</code> </strong>，</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>set<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> st<span class=\"token punctuation\">&#123;</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr class=\"marked\"><td data-num=\"2\"></td><td><pre>cout <span class=\"token operator\">&lt;&lt;</span> st<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr class=\"marked\"><td data-num=\"3\"></td><td><pre>cout <span class=\"token operator\">&lt;&lt;</span> st<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>結果如下，</p>\n<blockquote>\n<p>1, 0</p>\n</blockquote>\n<h3 id=\"find\"><a class=\"anchor\" href=\"#find\">#</a> find()</h3>\n<p>第二種方法是使用  <code>find()</code>  成員函式來判斷指定元素是否存在，<br>\n與  <code>count()</code>  不同的是  <code>find()</code>  <strong>有找到該指定元素的話會回傳指向該特定元素的 iterator，否則回傳 past-the-end (end ()) iterator</strong></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>set<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> st <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr class=\"marked\"><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">auto</span> search <span class=\"token operator\">=</span> st<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>search <span class=\"token operator\">!=</span> st<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Found \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token operator\">*</span>search <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">else</span> cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Not found\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>Found 2</p>\n</blockquote>\n<h2 id=\"判斷-set-容器是否為空\"><a class=\"anchor\" href=\"#判斷-set-容器是否為空\">#</a> 判斷 set 容器是否為空</h2>\n<p>要判斷 set 是否為空或是裡面有沒有元素的話，可以用  <code>empty()</code></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>set<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> st<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>st<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr class=\"marked\"><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Empty\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">else</span> cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Not empty\"</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>Empty</p>\n</blockquote>\n<h2 id=\"set-vs-vector\"><a class=\"anchor\" href=\"#set-vs-vector\">#</a> set vs. vector</h2>\n<ul>\n<li>唯一性\n<ul>\n<li>set 跟 vector 不同之處是 <strong>set 容器裡面的元素是唯一的</strong>，具有不重複的特性，vector 則沒有這個限制。</li>\n</ul>\n</li>\n<li>不可修改性\n<ul>\n<li>vector 可以修改元素的值，但 <strong>set 容器裡面元素的值是不可修改的</strong>。</li>\n</ul>\n</li>\n<li>順序性\n<ul>\n<li><strong>set 是有序的</strong>，也就是裡面的元素會按照特定順序擺放，跟插入順序無關，vector 則不是。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"參考資料\"><a class=\"anchor\" href=\"#參考資料\">#</a> 參考資料</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaGVuZ3l1NzY5Ny5naXRodWIuaW8vc3RkLXNldC8=\">https://shengyu7697.github.io/std-set/</span></li>\n</ul>\n",
            "tags": [
                "Programming",
                "C/C++",
                "C/C++",
                "Data Structure",
                "Set"
            ]
        },
        {
            "id": "https://chienikao.github.io/2023/04/19/programming/CPP/cpp%20string%20split/",
            "url": "https://chienikao.github.io/2023/04/19/programming/CPP/cpp%20string%20split/",
            "title": "C/C++ - String Split",
            "date_published": "2023-04-19T08:50:44.000Z",
            "content_html": "<h2 id=\"c-語言的-strtok\"><a class=\"anchor\" href=\"#c-語言的-strtok\">#</a> C 語言的 strtok</h2>\n<p>C 語言要字串分割通常會使用 strtok，要使用 strtok 的話需要引入的標頭檔  <code>&lt;string.h&gt;</code> ，如果要使用 C++ 的標頭檔則是引入  <code>&lt;cstring&gt;</code> ，</p>\n<p>strtok 函式原型為</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>strtok</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">char</span><span class=\"token operator\">*</span> <span class=\"token function\">strtok</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span> str<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> delimiters<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>strtok()</code>  會將  <code>str</code>  依據給入的  <code>delimiters</code>  (分割符號 / 分隔符號) 進行字串分割，如果<strong>成功的話會回傳指向分割結果的字串開頭</strong>，<strong>否則會回傳 NULL</strong>。</p>\n<h3 id=\"example\"><a class=\"anchor\" href=\"#example\">#</a> Example</h3>\n<p><code>d</code>  是分割符號 / 分隔符號，這邊示範用<em>空格</em>與<em>逗號</em>進行分割，如果有需要的話還可以在 delimiters 加入更多的分割符號，<br>\n <code>p</code>  是<strong>指向每次分割的結果</strong>，</p>\n<div class=\"note danger no-icon\">\n<p>要注意的是<strong>除了第一次是將 str 帶入 strtok 分割以外，第二次以上都是將 NULL 帶入 strtok 繼續作字串分割</strong></p>\n</div>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>strtok()</span><a href=\"https://chienikao.github.io\">Home</a></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr class=\"marked\"><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ing <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">char</span> str<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello world, nice to meet you\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> d <span class=\"token operator\">=</span> <span class=\"token string\">\" ,\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr class=\"marked\"><td data-num=\"9\"></td><td><pre>    p <span class=\"token operator\">=</span> <span class=\"token function\">strtok</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\\n\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr class=\"marked\"><td data-num=\"13\"></td><td><pre>        p <span class=\"token operator\">=</span> <span class=\"token function\">strtok</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>結果如下，</p>\n<blockquote>\n<p>Hello<br>\nworld<br>\nnice<br>\nto<br>\nmeet<br>\nyou</p>\n</blockquote>\n<div class=\"note danger no-icon\">\n<p>因為 strtok 的實做原理是發現分割字元時，就把字元改為  <code>\\0</code>  字元，意味著使用  <code>strtok()</code>  完後，<strong>原字串會被修改</strong>，<br>\n修改後的結果是  <code>Hello\\nworld\\n\\nnice\\nto\\nmeet\\nyou</code>  這樣的形式，所以原本的字串如果之後另有用途的話，記得先複製一份。</p>\n</div>\n<h2 id=\"c-find-substr\"><a class=\"anchor\" href=\"#c-find-substr\">#</a> C++ find() &amp; substr()</h2>\n<p><code>std::string::find()</code>  可以用來作<strong>字串搜尋</strong>的功能，再將每次找到的位置搭配  <code>std::string::substr()</code>  取出子字串並放入  <code>std::vector</code>  裡，最後再回傳這個結果  <code>std::vector&lt;std::string&gt; result</code> ，這種方式的好處是原字串不會被修改。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>find() & substr()</span><a href=\"https://chienikao.github.io\">Home</a></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstring></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr class=\"marked\"><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> vector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> <span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string<span class=\"token operator\">&amp;</span> str<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> string<span class=\"token operator\">&amp;</span> pattern<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    string<span class=\"token double-colon punctuation\">::</span>size_type begin<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    end <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    begin <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>end <span class=\"token operator\">!=</span> string<span class=\"token double-colon punctuation\">::</span>npos<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>end <span class=\"token operator\">-</span> begin <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span>begin<span class=\"token punctuation\">,</span> end <span class=\"token operator\">-</span> begin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        begin <span class=\"token operator\">=</span> end <span class=\"token operator\">+</span> pattern<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        end <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">,</span> begin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>begin <span class=\"token operator\">!=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span>begin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    string str <span class=\"token operator\">=</span> <span class=\"token string\">\"This is a C++ string\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    string pattern <span class=\"token operator\">=</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> v <span class=\"token operator\">=</span> <span class=\"token function\">split</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> pattern<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> s <span class=\"token operator\">:</span> v<span class=\"token punctuation\">)</span> cout <span class=\"token operator\">&lt;&lt;</span> s <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>結果如下，</p>\n<blockquote>\n<p>This<br>\nis<br>\na<br>\nC++<br>\nstring</p>\n</blockquote>\n<h2 id=\"c-getline\"><a class=\"anchor\" href=\"#c-getline\">#</a> C++ getline()</h2>\n<p>先將  <code>string</code>  建立  <code>stringstream</code> ，再用  <code>getline()</code>  來處理  <code>stringstream</code> ，將每一次取出的字串放到  <code>vector</code> ，最後再回傳這個結果  <code>vector&lt;string&gt; result</code> ，這種方式的好處是原字串不會被修改。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>getline()</span><a href=\"https://chienikao.github.io\">Home</a></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span></pre></td></tr><tr class=\"marked\"><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sstream></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr class=\"marked\"><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> vector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> <span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string<span class=\"token operator\">&amp;</span> str<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">&amp;</span> delimiter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    stringstream <span class=\"token function\">ss</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    string tok<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getline</span><span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">,</span> tok<span class=\"token punctuation\">,</span> delimiter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>tok<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    string str <span class=\"token operator\">=</span> <span class=\"token string\">\"This is a C++ string\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> v <span class=\"token operator\">=</span> <span class=\"token function\">split</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> <span class=\"token char\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> s<span class=\"token operator\">:</span> v<span class=\"token punctuation\">)</span> cout <span class=\"token operator\">&lt;&lt;</span> s <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>結果如下，</p>\n<blockquote>\n<p>This<br>\nis<br>\na<br>\nC++<br>\nstring</p>\n</blockquote>\n<h2 id=\"參考資料\"><a class=\"anchor\" href=\"#參考資料\">#</a> 參考資料</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaGVuZ3l1NzY5Ny5naXRodWIuaW8vY3BwLXN0cmluZy1zcGxpdC8=\">https://shengyu7697.github.io/cpp-string-split/</span></li>\n</ul>\n",
            "tags": [
                "Programming",
                "C/C++",
                "String",
                "C/C++",
                "split"
            ]
        },
        {
            "id": "https://chienikao.github.io/2023/04/19/uva/star1/uva%20496%20-%20Simply%20Subsets/",
            "url": "https://chienikao.github.io/2023/04/19/uva/star1/uva%20496%20-%20Simply%20Subsets/",
            "title": "uva 496 - Simply Subsets",
            "date_published": "2023-04-19T06:19:27.000Z",
            "content_html": "<p><strong>Time limit: 3.000 seconds</strong></p>\n<h2 id=\"題目連結\"><a class=\"anchor\" href=\"#題目連結\">#</a> 題目連結</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96ZXJvanVkZ2UudHcvU2hvd1Byb2JsZW0/cHJvYmxlbWlkPWQ2OTE=\">ZeroJudge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvZXh0ZXJuYWwvNC9wNDk2LnBkZg==\">題目連結</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvaW5kZXgucGhwP29wdGlvbj1jb21fb25saW5lanVkZ2UmYW1wO0l0ZW1pZD04JmFtcDtjYXRlZ29yeT02JmFtcDtwYWdlPXNob3dfcHJvYmxlbSZhbXA7cHJvYmxlbT00Mzc=\">Online Judge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudWRlYnVnLmNvbS9VVmEvNDk2\">uDebug</span></li>\n</ul>\n<h2 id=\"題目敘述\"><a class=\"anchor\" href=\"#題目敘述\">#</a> 題目敘述</h2>\n<div class=\"note default no-icon\">\n<p>在數學的定義中，一個集合裡有 0 或多個元素。  在本問題中要請你判斷 2 個集合的關係。</p>\n</div>\n<h2 id=\"input\"><a class=\"anchor\" href=\"#input\">#</a> Input</h2>\n<div class=\"note success no-icon\">\n<p>輸入包含很多組測試資料，每組測試資料有 2 列。 第一列代表第一個集合 A，第二列代表第二個集合 B。 每個集合至多 100 個數字，數字間以一個空格分開。</p>\n</div>\n<h2 id=\"output\"><a class=\"anchor\" href=\"#output\">#</a> Output</h2>\n<div class=\"note info no-icon\">\n<p>對每筆輸入資料你應該要輸出以下其中一種情況：</p>\n<ul>\n<li>A is a proper subset of B （A 是 B 的子集合）</li>\n<li>B is a proper subset of A （B 是 A 的子集合）</li>\n<li>A equals B （A、B 是相同集合）</li>\n<li>A and B are disjoint （A、B 完全沒有交集）</li>\n<li>I’m confused! （A、B 有部分交集）</li>\n</ul>\n</div>\n<h2 id=\"sample-input\"><a class=\"anchor\" href=\"#sample-input\">#</a> Sample Input</h2>\n<blockquote>\n<p>55 27<br>\n55 27<br>\n9 24 1995<br>\n9 24<br>\n1 2 3<br>\n1 2 3 4<br>\n1 2 3<br>\n4 5 6<br>\n1 2<br>\n2 3</p>\n</blockquote>\n<h2 id=\"sample-output\"><a class=\"anchor\" href=\"#sample-output\">#</a> Sample Output</h2>\n<blockquote>\n<p>A equals B<br>\nB is a proper subset of A<br>\nA is a proper subset of B<br>\nA and B are disjoint<br>\nI’m confused!</p>\n</blockquote>\n<h2 id=\"code\"><a class=\"anchor\" href=\"#code\">#</a> Code</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    string a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> tok<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getline</span><span class=\"token punctuation\">(</span>cin<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token function\">getline</span><span class=\"token punctuation\">(</span>cin<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        stringstream <span class=\"token function\">sa</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        set<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> setA<span class=\"token punctuation\">,</span> setB<span class=\"token punctuation\">,</span> sum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getline</span><span class=\"token punctuation\">(</span>sa<span class=\"token punctuation\">,</span> tok<span class=\"token punctuation\">,</span> <span class=\"token char\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            setA<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>tok<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            sum<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>tok<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        stringstream <span class=\"token function\">sb</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getline</span><span class=\"token punctuation\">(</span>sb<span class=\"token punctuation\">,</span> tok<span class=\"token punctuation\">,</span> <span class=\"token char\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            setB<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>tok<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            sum<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>tok<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">int</span> numa <span class=\"token operator\">=</span> setA<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> numb <span class=\"token operator\">=</span> setB<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>numa <span class=\"token operator\">==</span> sum<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> numb <span class=\"token operator\">==</span> sum<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"A equals B\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>numa <span class=\"token operator\">==</span> sum<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"B is a proper subset of A\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>numb <span class=\"token operator\">==</span> sum<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"A is a proper subset of B\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> numa <span class=\"token operator\">+</span> numb<span class=\"token punctuation\">)</span> cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"A and B are disjoint\\n\"</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">else</span> cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"I'm confused!\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "UVA",
                "Star1",
                "Star1",
                "CPE",
                "UVA"
            ]
        },
        {
            "id": "https://chienikao.github.io/2023/04/19/algorithm/%E9%BE%9C%E5%85%94%E8%B3%BD%E8%B7%91/",
            "url": "https://chienikao.github.io/2023/04/19/algorithm/%E9%BE%9C%E5%85%94%E8%B3%BD%E8%B7%91/",
            "title": "龜兔賽跑算法",
            "date_published": "2023-04-19T03:45:03.000Z",
            "content_html": "<div class=\"note info no-icon\">\n<p>假設同時一隻烏龜和一隻兔子從起點開始賽跑，<strong>烏龜一次跑一格，兔子一次跑兩格</strong>，一直跑下去<strong>如果他們能在某個地點會合，代表他們在環形跑道中</strong>。<br>\n<img data-src=\"https://i.imgur.com/1RI63gz.png\" alt=\"\"></p>\n<p>反之如果是直線跑道烏龜永遠追不上兔子。</p>\n<p><img data-src=\"https://i.imgur.com/V4BoPwR.png\" alt=\"\"></p>\n</div>\n<h2 id=\"floyd-cycle-detection-algorithm-找出環的起點\"><a class=\"anchor\" href=\"#floyd-cycle-detection-algorithm-找出環的起點\">#</a> Floyd Cycle Detection Algorithm 找出環的起點</h2>\n<div class=\"note info no-icon\">\n<p>從起點開始賽跑，兔子一次走兩格、烏龜一次走一格直到他們相遇停止，<strong>此時兔子所走的距離是烏龜的兩倍</strong>。</p>\n</div>\n<p><img data-src=\"https://i.imgur.com/US27XN9.png\" alt=\"\"></p>\n<div class=\"note info no-icon\">\n<p>假設烏龜與兔子在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span> 點第一次相遇，<strong>環周長為<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span></strong></p>\n<p>烏龜走了<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>+</mo><mi>b</mi><mo>+</mo><mi>m</mi><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">a + b + mS</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> 的距離，兔子也同樣走了<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">mS</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> 圈但比烏龜多走了<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">nS</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> 圈，所以兔子總共走了<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>+</mo><mi>b</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mi>m</mi><mo>+</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">a + b + (m + n)S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> 的距離，由於兩個都走了<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">mS</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> 圈，所以我們可以把<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">mS</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> 扣掉。</p>\n</div>\n<div class=\"note danger no-icon\">\n<p><strong>兔子所走的距離是烏龜的兩倍</strong>所以</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mn>2</mn><mo stretchy=\"false\">(</mo><mi>a</mi><mo>+</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mtext> </mtext><mi>a</mi><mo>+</mo><mi>b</mi><mo>+</mo><mi>n</mi><mi>S</mi><mspace linebreak=\"newline\"></mspace><mi>a</mi><mo>+</mo><mi>b</mi><mo>=</mo><mtext> </mtext><mi>n</mi><mi>S</mi><mspace linebreak=\"newline\"></mspace><mi>a</mi><mo>=</mo><mtext> </mtext><mi>n</mi><mi>S</mi><mo>−</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">2(a + b) = \\ a + b + nS \\\\\na + b = \\ nS \\\\\na = \\ nS - b\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 代表圈數，不論跑幾圈，每圈的起始點都會在同一個地方<br>\n所以我們可以先假設<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n = 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></p>\n<p>則<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>=</mo><mi>S</mi><mo>−</mo><mi>b</mi><mo>=</mo><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">a = S - b = c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span></span></span></span></p>\n</div>\n<p>此時讓烏龜返回起始點，兩者以相同速度繼續前進，他們就會在 Y 點再次會合，也就是重複的數字。</p>\n",
            "tags": [
                "Algorithm",
                "Algorithm",
                "Data Structure & Algorithm",
                "Floyd Cycle Detection Algorithm"
            ]
        },
        {
            "id": "https://chienikao.github.io/2023/04/19/Web/CSS/CSS%20-%20Transition/",
            "url": "https://chienikao.github.io/2023/04/19/Web/CSS/CSS%20-%20Transition/",
            "title": "CSS - Transition",
            "date_published": "2023-04-18T17:13:43.521Z",
            "content_html": "<div class=\"note info\">\n<ul>\n<li><code>transition</code>  讓我們可以在給定的時間內平滑的改變屬性的值。</li>\n<li>要呈現 <code>transition</code>  效果，必須達成兩件事:\n<ol>\n<li>要添加效果的 CSS 屬性</li>\n<li>效果的持續時間</li>\n</ol>\n</li>\n</ul>\n</div>\n<div class=\"note danger\">\n<p><strong>NOTE:</strong> 如果沒有給定持續時間， <code>transition</code>  將不會有效果，因為 default 值為 0。</p>\n</div>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example 1</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfdHJhbnNpdGlvbjE=\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> width 2s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token selector\">div:hover</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example 2</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfdHJhbnNpdGlvbjI=\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> width 2s<span class=\"token punctuation\">,</span> height 4s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token selector\">div:hover</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Transition + Transformation</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfdHJhbnNpdGlvbl90cmFuc2Zvcm0=\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> width 2s<span class=\"token punctuation\">,</span> height 2s<span class=\"token punctuation\">,</span> transform 2s</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token selector\">div:hover</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>180deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"speed-curve-of-transition\"><a class=\"anchor\" href=\"#speed-curve-of-transition\">#</a> Speed curve of Transition</h2>\n<p><code>transition-timing-function</code>  指定了 <code>transition</code>  效果的速度曲線。</p>\n<div class=\"note danger no-icon\">\n<p><strong>Value</strong></p>\n<ul>\n<li><code>ease</code>  - default(slow start, then fast, then end slowly).</li>\n<li><code>linear</code>  - same speed from start to end.</li>\n<li><code>ease-in</code>  - slow start.</li>\n<li><code>ease-out</code>  - slow end.</li>\n<li><code>ease-in-out</code>  - slow start and end.</li>\n<li><code>cubic-bezier(n, n, n, n)</code>  lets you define your own.</li>\n</ul>\n</div>\n<div class=\"links\"><div class=\"item\" title=\"Example\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfdHJhbnNpdGlvbl9zcGVlZA==\" data-background-image=\"/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfdHJhbnNpdGlvbl9zcGVlZA==\">Example</span>\n          <p class=\"desc\">https://www.w3schools.com/css/tryit.asp?filename=trycss3_transition_speed</p>\n          </div></div></div>\n<h2 id=\"transition-delay\"><a class=\"anchor\" href=\"#transition-delay\">#</a> Transition Delay</h2>\n<p><code>transition-delay</code>  可以指定效果的延遲 (in seconds)。</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfdHJhbnNpdGlvbl9kZWxheQ==\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* 1 second delay before starting */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">transition-delay</span><span class=\"token punctuation\">:</span> 1s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "Web",
                "CSS",
                "Web",
                "CSS"
            ]
        },
        {
            "id": "https://chienikao.github.io/2023/04/19/Web/CSS/CSS%20-%20Transform/",
            "url": "https://chienikao.github.io/2023/04/19/Web/CSS/CSS%20-%20Transform/",
            "title": "CSS - Transform",
            "date_published": "2023-04-18T16:59:22.494Z",
            "content_html": "<h2 id=\"transform-origin\"><a class=\"anchor\" href=\"#transform-origin\">#</a> Transform-origin</h2>\n<div class=\"note info\">\n<ul>\n<li>預設值為元素<strong>中心點 (50%, 50%)</strong></li>\n<li>位移、旋轉、縮放、傾斜的<strong>參考點</strong></li>\n<li>元素<strong>左上角</strong>座標為 <strong>(x, y) = (0, 0)</strong></li>\n</ul>\n</div>\n<blockquote>\n<p>元素預設座標系統預設位置為左上角 (0,0)，主要用來<strong>排版</strong><br>\n transform 的預設值為 (50%,50%)，主要用來做<strong>動畫效果</strong></p>\n</blockquote>\n<p><code>transform</code>  讓我們可以<strong>移動、旋轉、縮放或傾斜</strong>元素。</p>\n<h2 id=\"2d-transform-methods\"><a class=\"anchor\" href=\"#2d-transform-methods\">#</a> 2D Transform Methods</h2>\n<div class=\"note danger no-icon\">\n<ul>\n<li><code>translate()</code></li>\n<li><code>rotate()</code></li>\n<li><code>scaleX()</code></li>\n<li><code>scaleY()</code></li>\n<li><code>scale()</code></li>\n<li><code>skewX()</code></li>\n<li><code>skewY()</code></li>\n<li><code>skew()</code></li>\n<li><code>matrix()</code></li>\n</ul>\n</div>\n<h3 id=\"translate\"><a class=\"anchor\" href=\"#translate\">#</a> Translate()</h3>\n<p><code>translate()</code>  可以根據給定的參數 (<em>X-axis</em>, <em>Y-axis</em>)<strong> 位移</strong>元素。</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfdHJhbnNmb3JtX3RyYW5zbGF0ZQ==\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* Moves the &lt;div> element 50 pixels to the right, and 100 pixels down from its current position */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>50px<span class=\"token punctuation\">,</span> 100px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"rotate\"><a class=\"anchor\" href=\"#rotate\">#</a> Rotate()</h3>\n<p><code>rotate()</code>  可以根據給定的角度<strong>順時針</strong>或<strong>逆時針旋轉</strong>元素。</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example 1</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfdHJhbnNmb3JtX3JvdGF0ZQ==\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* Rotates the &lt;div> element clockwise with 20 degrees */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>20deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example 2</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfdHJhbnNmb3JtX3JvdGF0ZTI=\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* Rotates the &lt;div> element counter-clockwise with 20 degrees */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>-20deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"scale\"><a class=\"anchor\" href=\"#scale\">#</a> Scale()</h3>\n<ul>\n<li><code>scale()</code>  可以根據給定的參數 (<em>width</em>, <em>height</em>)<strong> 縮放</strong>元素的大小。</li>\n<li><code>scaleX()</code>  控制縮放的<strong>寬度 (<em>width</em>)</strong></li>\n<li><code>scaleY()</code>  則控制縮放的<strong>高度 (<em>height</em>)</strong>。</li>\n</ul>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example 1</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfdHJhbnNmb3JtX3NjYWxl\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* Increases the &lt;div> element to be two times of its original width, and three times of its original height */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>2<span class=\"token punctuation\">,</span> 3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example 2</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfdHJhbnNmb3JtX3NjYWxlMg==\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* Decreases the &lt;div> element to be half of its original width and height */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>0.5<span class=\"token punctuation\">,</span> 0.5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example 3</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfdHJhbnNmb3JtX3NjYWxlWA==\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* Increases the &lt;div> element to be two times of its original width */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">scaleX</span><span class=\"token punctuation\">(</span>2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example 4</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfdHJhbnNmb3JtX3NjYWxlWTI=\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* Decreases the &lt;div> element to be half of its original height */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">scaleY</span><span class=\"token punctuation\">(</span>0.5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"skew\"><a class=\"anchor\" href=\"#skew\">#</a> Skew()</h3>\n<ul>\n<li><code>skew()</code>  可以根據給定的角度 (<em>X-axis</em>, <em>Y-axis</em>)<strong> 傾斜</strong>元素</li>\n<li><code>skewX()</code>  將元素沿著<em> X-axis</em> 傾斜。</li>\n<li><code>skewY()</code>  將元素沿著<em> Y-axis</em> 傾斜。</li>\n</ul>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example 1</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfdHJhbnNmb3JtX3NrZXc=\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* Skews the &lt;div> element 20 degrees along the X-axis, and 10 degrees along the Y-axis */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">skew</span><span class=\"token punctuation\">(</span>20deg<span class=\"token punctuation\">,</span> 10deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example 2</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfdHJhbnNmb3JtX3NrZXd4\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* Skews the &lt;div> element 20 degrees along the X-axis */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">skewX</span><span class=\"token punctuation\">(</span>20deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example 3</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfdHJhbnNmb3JtX3NrZXd5\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* Skews the &lt;div> element 20 degrees along the Y-axis */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">skewY</span><span class=\"token punctuation\">(</span>20deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"matrix\"><a class=\"anchor\" href=\"#matrix\">#</a> Matrix()</h3>\n<p><code>matrix()</code>  整合所有 2D <code>transform</code>  方法。</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">matrix</span><span class=\"token punctuation\">(</span><span class=\"token function\">scaleX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">skewY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">skewX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">scaleY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">translateX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">translateY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfdHJhbnNmb3JtX21hdHJpeDE=\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">matrix</span><span class=\"token punctuation\">(</span>1<span class=\"token punctuation\">,</span> -0.3<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 1<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"3d-transform-methods\"><a class=\"anchor\" href=\"#3d-transform-methods\">#</a> 3D Transform Methods</h2>\n<div class=\"note danger\">\n<ul>\n<li>rotateX()</li>\n<li>rotateY()</li>\n<li>rotateZ()</li>\n</ul>\n</div>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example 1</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfdHJhbnNmb3JtX3JvdGF0ZVg=\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* Rotates an element around its X-axis at a given degree */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotateX</span><span class=\"token punctuation\">(</span>150deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example 2</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfdHJhbnNmb3JtX3JvdGF0ZVk=\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* Rotates an element around its Y-axis at a given degree */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotateY</span><span class=\"token punctuation\">(</span>150deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example 3</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfdHJhbnNmb3JtX3JvdGF0ZVo=\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* Rotates an element around its Z-axis at a given degree */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotateZ</span><span class=\"token punctuation\">(</span>150deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "Web",
                "CSS",
                "Web",
                "CSS"
            ]
        },
        {
            "id": "https://chienikao.github.io/2023/04/19/Web/CSS/CSS%20-%20Float/",
            "url": "https://chienikao.github.io/2023/04/19/Web/CSS/CSS%20-%20Float/",
            "title": "CSS - Float",
            "date_published": "2023-04-18T16:00:00.000Z",
            "content_html": "<h2 id=\"float\"><a class=\"anchor\" href=\"#float\">#</a> Float</h2>\n<p><code>float</code>  用於定位和格式化內容。例如讓圖像浮動到容器的左側。</p>\n<div class=\"note danger no-icon\">\n<p><strong>Float contains following values:</strong></p>\n<ul>\n<li><code>left</code>  - 讓元素浮動到容器的左側。</li>\n<li><code>right</code>  - 讓元素浮動到容器的右側。</li>\n<li><code>none</code>  - Default value, 元素不浮動。</li>\n<li><code>inherit</code>  - 繼承父元素的浮動值。</li>\n</ul>\n</div>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example - float: right</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzc19sYXlvdXRfZmxvYXQ=\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">img</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">float</span><span class=\"token punctuation\">:</span> right<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"float-next-to-each-other\"><a class=\"anchor\" href=\"#float-next-to-each-other\">#</a> Float Next to Each Other</h3>\n<p>運用  <code>float: left</code>  我們也可以讓元素水平排列。</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzc19sYXlvdXRfZmxvYXQz\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 15px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token selector\">.div1</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">background</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token selector\">.div2</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">background</span><span class=\"token punctuation\">:</span> yellow<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token selector\">.div3</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">background</span><span class=\"token punctuation\">:</span> green<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"clear\"><a class=\"anchor\" href=\"#clear\">#</a> Clear</h2>\n<p><code>clear</code>  指定浮動元素旁邊的元素應該發生什麼。</p>\n<div class=\"note danger no-icon\">\n<p><strong>Clear contains following values:</strong></p>\n<ul>\n<li><code>none</code>  - Default value, 元素不會被推到左側或右側元素下方。</li>\n<li><code>left</code>  - 元素被推到<strong>左浮動</strong>元素下方。</li>\n<li><code>right</code>  - 元素被推到<strong>右浮動</strong>元素下方。</li>\n<li><code>both</code>  - 元素被推到<strong>左右浮動</strong>元素下方。</li>\n<li><code>inherit</code> - 從其父元素<strong>繼承</strong>清除值。</li>\n</ul>\n</div>\n<p>當我們要清除浮動時，<strong>應將清除值與浮動值匹配:</strong> 如果元素向左浮動，則應向左清除。</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzc19sYXlvdXRfY2xlYXI=\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">div1</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">float</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token selector\">div2</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">clear</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"the-clearfix-hack\"><a class=\"anchor\" href=\"#the-clearfix-hack\">#</a> The clearfix Hack</h3>\n<p>如果浮動的元素高於容器時，將會超出邊界，我們可以用<font> <code>overflow: auto</code> </font>來修正。</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzc19sYXlvdXRfY2xlYXJmaXg=\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">.clearfix</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>而現在較多人用的是以下的代碼。</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzc19sYXlvdXRfY2xlYXJmaXgy\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">.clearfix::after</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">clear</span><span class=\"token punctuation\">:</span> both<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> table<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><div class=\"links\"><div class=\"item\" title=\"About clearfix hack\" style=\"--block-color:#ccc;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly93d3cucHJvZ3JhbWZhcm1lci5jb20vYXJ0aWNsZXMvc3R5bGUvY3NzLWZsb2F0LWFuZC1mbGV4\" data-background-image=\"/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly93d3cucHJvZ3JhbWZhcm1lci5jb20vYXJ0aWNsZXMvc3R5bGUvY3NzLWZsb2F0LWFuZC1mbGV4\">About clearfix hack</span>\n          <p class=\"desc\">https://www.programfarmer.com/articles/style/css-float-and-flex</p>\n          </div></div></div>",
            "tags": [
                "Web",
                "CSS",
                "Web",
                "CSS",
                "Float"
            ]
        },
        {
            "id": "https://chienikao.github.io/2023/04/19/Web/HTML/HTML%20-%20Forms/",
            "url": "https://chienikao.github.io/2023/04/19/Web/HTML/HTML%20-%20Forms/",
            "title": "HTML - Forms",
            "date_published": "2023-04-18T16:00:00.000Z",
            "content_html": "<p>HTML 表單通常用於收集用戶輸入，用戶輸入會被蒐集到伺服器處理。<br>\n <code>&lt;form&gt;</code>  元素用於為用戶輸入創建 HTML 表單。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>/* form elements */</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"the-input-element\"><a class=\"anchor\" href=\"#the-input-element\">#</a> The &lt;Input&gt; Element</h2>\n<p><code>&lt;form&gt;</code>  擁有各式各樣的輸入容器，例如：單選、複選或提交按鈕。<br>\n <code>&lt;input&gt;</code>  的使用樣式取決於我們設定的  <code>type</code>  屬性。</p>\n<p><strong>這裡是常用的樣式:</strong></p>\n<table>\n<thead>\n<tr>\n<th><strong>Type</strong></th>\n<th><strong>Description</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>&lt;input type=&quot;text&quot;&gt;</code></td>\n<td>Display a single-line text input field</td>\n</tr>\n<tr>\n<td><code>&lt;input type=&quot;radio&quot;&gt;</code></td>\n<td>Displays a radio button (for selecting one of many choices)</td>\n</tr>\n<tr>\n<td><code>&lt;input type=&quot;checkbox&quot;&gt;</code></td>\n<td>Displays a checkbox (for selecting zero or more of many choices)</td>\n</tr>\n<tr>\n<td><code>&lt;input type=&quot;submit&quot;&gt;</code></td>\n<td>Displays a submit button (for submitting the form)</td>\n</tr>\n<tr>\n<td><code>&lt;input type=&quot;button&quot;&gt;</code></td>\n<td>Displays a clickable button</td>\n</tr>\n</tbody>\n</table>\n<p>請參考這篇 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrbWQuaW8vQENoaWVuSS9odG1sX2lucHV0\">HTML - Input</span></p>\n<h2 id=\"html-form-attributes\"><a class=\"anchor\" href=\"#html-form-attributes\">#</a> HTML Form Attributes</h2>\n<h3 id=\"action-attribute\"><a class=\"anchor\" href=\"#action-attribute\">#</a> Action Attribute</h3>\n<p><code>&lt;action&gt;</code>  屬性定義提交表單時要執行的操作。<br>\n通常，當使用者提交表單後，表單數據會被發送到伺服器上的一個文件中。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"><span>Example</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9odG1sL3RyeWl0LmFzcD9maWxlbmFtZT10cnlodG1sX2Zvcm1fYXR0cmlidXRlc19zdWJtaXQ=\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/action_page.php<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fname<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>First name:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fname<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fname<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>John<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lname<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Last name:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lname<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lname<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Doe<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><blockquote>\n<p><strong>NOTE: 如果省略  <code>action</code>  欄位，則預設為目前頁面。</strong></p>\n</blockquote>\n<h3 id=\"target-attribute\"><a class=\"anchor\" href=\"#target-attribute\">#</a> Target Attribute</h3>\n<p><code>target</code>  屬性定義在何處顯示提交表單後收到的回應。</p>\n<div class=\"note danger no-icon\">\n<p><strong> <code>target</code>  has following values:</strong></p>\n<ul>\n<li><code>_blank</code>  - The response is displayed in a <strong>new window or tab</strong>.</li>\n<li><code>_self</code>  - Default value, the response is displayed in the <strong>current window</strong>.</li>\n<li><code>_parent</code>  - The response is displayed in the <strong>parent frame</strong>.</li>\n<li><code>_top</code>  - The response is displayed in the <strong>full body of the window</strong>.</li>\n<li><em>framename</em> - The response is displayed <strong>in a named iframe</strong>.</li>\n</ul>\n</div>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"><span>Example</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9odG1sL3RyeWl0LmFzcD9maWxlbmFtZT10cnlodG1sX2Zvcm1fdGFyZ2V0\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/action_page.php<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"method-attribute\"><a class=\"anchor\" href=\"#method-attribute\">#</a> Method Attribute</h3>\n<p><code>method</code>  屬性定義 HTTP 要用何種方式傳送表單資料。</p>\n<div class=\"note danger no-icon\">\n<ul>\n<li><code>method=&quot;get&quot;</code>  - Sent data as URL variables.</li>\n<li><code>method=&quot;post&quot;</code>  - Sent data as HTTP post transaction.</li>\n</ul>\n<p>The default value is <em><strong>GET</strong></em>.</p>\n</div>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"><span>GET Example</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9odG1sL3RyeWl0LmFzcD9maWxlbmFtZT10cnlodG1sX2Zvcm1fZ2V0\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/action_page.php<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>get<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><img data-src=\"https://i.imgur.com/1pmMlQ1.png\" alt=\"\"></p>\n<blockquote>\n<p><strong>表單資訊會跟隨在網址後面，安全性較差。</strong></p>\n</blockquote>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"><span>POST Example</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9odG1sL3RyeWl0LmFzcD9maWxlbmFtZT10cnlodG1sX2Zvcm1fcG9zdA==\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/action_page.php<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><div class=\"note danger\">\n<p><strong>NOTE on GET:</strong></p>\n<ul>\n<li>提交的表單資料會跟隨在 URL 後面，以 name/value 的形式。</li>\n<li><strong>永遠不要用 GET 發送敏感信息！！！</strong></li>\n<li>URL 的長度限制為 2048 characters。</li>\n<li>對於用戶想要為結果添加書籤的表單提交很有用</li>\n<li>GET 適用於非安全數據，例如 Google 中的查詢字符串</li>\n</ul>\n<p><strong>NOTE on POST:</strong></p>\n<ul>\n<li>在 HTTP 請求的正文中附加表單數據（提交的表單數據未顯示在 URL 中）。</li>\n<li>POST 沒有大小限制，可用於發送大量數據。</li>\n<li>使用 POST 提交的表單不能添加書籤。</li>\n</ul>\n</div>\n<h3 id=\"autocomplete-attribute\"><a class=\"anchor\" href=\"#autocomplete-attribute\">#</a> Autocomplete Attribute</h3>\n<p><code>autocomplete</code>  屬性決定是否開啟表單自動完成功能。<br>\n啟用自動完成後，瀏覽器會根據用戶之前輸入的值自動完成。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"><span>Example</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9odG1sL3RyeWl0LmFzcD9maWxlbmFtZT10cnlodG1sX2Zvcm1fYXV0b2NvbXBsZXRl\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/action_page.php<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">autocomplete</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>on<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure>",
            "tags": [
                "Web",
                "HTML",
                "Web",
                "HTML",
                "Forms"
            ]
        },
        {
            "id": "https://chienikao.github.io/2023/04/19/leetcode/medium/1372%20Longest%20ZigZag%20Path%20in%20a%20Binary%20Tree/",
            "url": "https://chienikao.github.io/2023/04/19/leetcode/medium/1372%20Longest%20ZigZag%20Path%20in%20a%20Binary%20Tree/",
            "title": "1372. Longest ZigZag Path in a Binary Tree",
            "date_published": "2023-04-18T16:00:00.000Z",
            "content_html": "<h2 id=\"題目敘述\"><a class=\"anchor\" href=\"#題目敘述\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbG9uZ2VzdC16aWd6YWctcGF0aC1pbi1hLWJpbmFyeS10cmVlLw==\">題目敘述</span></h2>\n<p>You are given the  <code>root</code>  of a binary tree.</p>\n<p>A ZigZag path for a binary tree is defined as follow:</p>\n<ul>\n<li>Choose <strong>any</strong> node in the binary tree and a direction (right or left).</li>\n<li>If the current direction is right, move to the right child of the current node; otherwise, move to the left child.</li>\n<li>Change the direction from right to left or from left to right.</li>\n<li>Repeat the second and third steps until you can’t move in the tree.</li>\n</ul>\n<p>Zigzag length is defined as the number of nodes visited - 1. (A single node has a length of 0).</p>\n<p>Return <em>the longest <strong>ZigZag</strong> path contained in that tree</em>.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<p><img data-src=\"https://i.imgur.com/c7mfyjz.png\" alt=\"\"></p>\n<blockquote>\n<p><strong>Input</strong>: root = [1,null,1,1,1,null,null,1,1,null,1,null,null,null,1,null,1]<br>\n<strong>Output</strong>: 3<br>\n<strong>Explanation</strong>: Longest ZigZag path in blue nodes (right -&gt; left -&gt; right).</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<p><img data-src=\"https://i.imgur.com/A23S6gD.png\" alt=\"\"></p>\n<blockquote>\n<p><strong>Input</strong>: root = [1,1,1,null,1,null,null,1,1,null,1]<br>\n<strong>Output</strong>: 4<br>\n<strong>Explanation</strong>: Longest ZigZag path in blue nodes (left -&gt; right -&gt; left -&gt; right).</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3:</h3>\n<blockquote>\n<p><strong>Input</strong>: root = [1]<br>\n<strong>Output</strong>: 0</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"code\"><a class=\"anchor\" href=\"#code\">#</a> Code</h2>\n<div class=\"tab\" data-id=\"id\" data-title=\"C++\">\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">dfs</span> <span class=\"token punctuation\">(</span>TreeNode<span class=\"token operator\">*</span> root<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>root<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> leftSubtree <span class=\"token operator\">=</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>root<span class=\"token operator\">-></span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> rightSubtree <span class=\"token operator\">=</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>root<span class=\"token operator\">-></span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">int</span> leftlen <span class=\"token operator\">=</span> leftSubtree<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">int</span> rightlen <span class=\"token operator\">=</span> rightSubtree<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">int</span> mxlen <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>leftlen<span class=\"token punctuation\">,</span> rightlen<span class=\"token punctuation\">,</span> leftSubtree<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> rightSubtree<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>leftlen<span class=\"token punctuation\">,</span> rightlen<span class=\"token punctuation\">,</span> mxlen<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">longestZigZag</span><span class=\"token punctuation\">(</span>TreeNode<span class=\"token operator\">*</span> root<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> res <span class=\"token operator\">=</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id\" data-title=\"Java\">\n<pre><code class=\"language-java=\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id\" data-title=\"Python\">\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">longestZigZag</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">:</span> Optional<span class=\"token punctuation\">[</span>TreeNode<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> root<span class=\"token punctuation\">:</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            leftSubtree<span class=\"token punctuation\">,</span> rightSubtree <span class=\"token operator\">=</span> dfs<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dfs<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                leftSubtree<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                rightSubtree<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>leftSubtree<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> rightSubtree<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> leftSubtree<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> rightSubtree<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> dfs<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure></div>\n",
            "tags": [
                "leetcode",
                "Medium",
                "leetcode",
                "Medium",
                "Dynamic Programming",
                "Tree",
                "Depth-First Search",
                "Binary Tree"
            ]
        },
        {
            "id": "https://chienikao.github.io/2023/04/18/Web/CSS/CSS%20-%20Animation/",
            "url": "https://chienikao.github.io/2023/04/18/Web/CSS/CSS%20-%20Animation/",
            "title": "CSS - Animation",
            "date_published": "2023-04-18T03:38:11.489Z",
            "content_html": "<h1 id=\"css-animation\"><a class=\"anchor\" href=\"#css-animation\">#</a> CSS - Animation</h1>\n<div class=\"note info\">\n<p>CSS 允許在不使用 <em>Javascript</em> 或 <em>Flash</em> 的情況下對 HTML 元素進行動畫處理。</p>\n</div>\n<h2 id=\"the-keyframes-rule\"><a class=\"anchor\" href=\"#the-keyframes-rule\">#</a> The @Keyframes Rule</h2>\n<div class=\"note default\">\n<p>當我們在 <code>@keyframes</code>  規則中指定 CSS 樣式時，動畫會在特定時間從目前樣式逐漸變為新樣式。</p>\n<ul>\n<li><code>animation-name</code></li>\n<li><code>animation-duration</code></li>\n</ul>\n</div>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>From - To</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfYW5pbWF0aW9uMQ==\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* The animation will last for 4 seconds, and it will gradually change the background-color of the &lt;div> element from \"red\" to \"yellow\" */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/* The animation code */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> example</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token selector\">from</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token selector\">to</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> yellow<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">/* The element to apply the animation to */</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token property\">animation-name</span><span class=\"token punctuation\">:</span> example<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token property\">animation-duration</span><span class=\"token punctuation\">:</span> 4s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><div class=\"note danger\">\n<p><strong>NOTE:</strong>  <code>animation-duration</code>  定義動畫會花多少時間完成，所以如果沒有指定時間，動畫將不會執行，因為 default 值是 0s。</p>\n</div>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Percent %</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfYW5pbWF0aW9uMw==\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* The animation code */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> example</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token selector\">0%</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span> <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0px<span class=\"token punctuation\">;</span> <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0px<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token selector\">25%</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> yellow<span class=\"token punctuation\">;</span> <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span> <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0px<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token selector\">50%</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span> <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span> <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token selector\">75%</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> green<span class=\"token punctuation\">;</span> <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0px<span class=\"token punctuation\">;</span> <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token selector\">100%</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span> <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0px<span class=\"token punctuation\">;</span> <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0px<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">/* The element to apply the animation to */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token property\">animation-name</span><span class=\"token punctuation\">:</span> example<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token property\">animation-duration</span><span class=\"token punctuation\">:</span> 4s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"delay-an-animation\"><a class=\"anchor\" href=\"#delay-an-animation\">#</a> Delay an Animation</h2>\n<div class=\"note info\">\n<p><code>animation-delay</code>  定義動畫延遲開始的時間。</p>\n</div>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example 1</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfYW5pbWF0aW9uX2RlbGF5\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">animation-name</span><span class=\"token punctuation\">:</span> example<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">animation-duration</span><span class=\"token punctuation\">:</span> 4s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token property\">animation-delay</span><span class=\"token punctuation\">:</span> 2s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>負數也可以執行，動畫會從它像是已經跑了 Ns 開始</strong></p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example 2</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfYW5pbWF0aW9uX2RlbGF5Mg==\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">animation-name</span><span class=\"token punctuation\">:</span> example<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">animation-duration</span><span class=\"token punctuation\">:</span> 4s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token property\">animation-delay</span><span class=\"token punctuation\">:</span> -2s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"set-how-many-times-an-animation-should-run\"><a class=\"anchor\" href=\"#set-how-many-times-an-animation-should-run\">#</a> Set How Many Times an Animation Should Run</h2>\n<div class=\"note info\">\n<p><code>animation-iteration-count</code>  指定動畫須執行幾次。</p>\n</div>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example 1</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfYW5pbWF0aW9uX2NvdW50\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* Example will run the animation 3 times before it stops */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">animation-name</span><span class=\"token punctuation\">:</span> example<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">animation-duration</span><span class=\"token punctuation\">:</span> 4s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token property\">animation-iteration-count</span><span class=\"token punctuation\">:</span> 3<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example 2</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfYW5pbWF0aW9uX2NvdW50Mg==\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* Example uses the value \"infinite\" to make the animation continue for ever */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">animation-name</span><span class=\"token punctuation\">:</span> example<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">animation-duration</span><span class=\"token punctuation\">:</span> 4s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token property\">animation-iteration-count</span><span class=\"token punctuation\">:</span> infinite<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"run-animation-in-reverse-direction-or-alternate-cycles\"><a class=\"anchor\" href=\"#run-animation-in-reverse-direction-or-alternate-cycles\">#</a> Run Animation in Reverse Direction or Alternate Cycles</h2>\n<div class=\"note info\">\n<p><code>animation-direction</code>  指定動畫要依什麼方向移動。</p>\n</div>\n<div class=\"note danger\">\n<p><strong>The animation-direction values:</strong></p>\n<ul>\n<li><code>normal</code>  - Default, the animation is played as <strong>normal(forwards)</strong>.</li>\n<li><code>reverse</code>  - The animation is played in <strong>reverse</strong> direction(backwards).</li>\n<li><code>alternate</code>  - The animation is played <strong>forwards first, then backwards</strong>.</li>\n<li><code>alternate-reverse</code>  - The animation is played <strong>backwards first, then forwards</strong>.</li>\n</ul>\n</div>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example 1</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfYW5pbWF0aW9uX2RpcmVjdGlvbg==\">link</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">animation-name</span><span class=\"token punctuation\">:</span> example<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">animation-duration</span><span class=\"token punctuation\">:</span> 4s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token property\">animation-direction</span><span class=\"token punctuation\">:</span> reverse<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><div class=\"links\"><div class=\"item\" title=\"Example 2\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfYW5pbWF0aW9uX2RpcmVjdGlvbjI=\" data-background-image=\"/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfYW5pbWF0aW9uX2RpcmVjdGlvbjI=\">Example 2</span>\n          <p class=\"desc\">https://www.w3schools.com/css/tryit.asp?filename=trycss3_animation_direction2</p>\n          </div></div><div class=\"item\" title=\"Example 3\" style=\"--block-color:#9d5b8b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfYW5pbWF0aW9uX2RpcmVjdGlvbjM=\" data-background-image=\"/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfYW5pbWF0aW9uX2RpcmVjdGlvbjM=\">Example 3</span>\n          <p class=\"desc\">https://www.w3schools.com/css/tryit.asp?filename=trycss3_animation_direction3</p>\n          </div></div></div>\n<h2 id=\"the-speed-curve-of-the-animation\"><a class=\"anchor\" href=\"#the-speed-curve-of-the-animation\">#</a> The Speed Curve of the Animation</h2>\n<div class=\"note info\">\n<p><code>animation-timing-function</code>  指定動畫的速度曲線。</p>\n</div>\n<div class=\"note danger\">\n<p><strong>Value</strong></p>\n<ul>\n<li><code>ease</code>  - default(slow start, then fast, then end slowly).</li>\n<li><code>linear</code>  - same speed from start to end.</li>\n<li><code>ease-in</code>  - slow start.</li>\n<li><code>ease-out</code>  - slow end.</li>\n<li><code>ease-in-out</code>  - slow start and end.</li>\n<li><code>cubic-bezier(n, n, n, n)</code>  lets you define your own.</li>\n</ul>\n</div>\n<div class=\"links\"><div class=\"item\" title=\"Example\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfYW5pbWF0aW9uX3NwZWVk\" data-background-image=\"/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfYW5pbWF0aW9uX3NwZWVk\">Example</span>\n          <p class=\"desc\">https://www.w3schools.com/css/tryit.asp?filename=trycss3_animation_speed</p>\n          </div></div></div>\n<h2 id=\"the-fill-mode-for-an-animation\"><a class=\"anchor\" href=\"#the-fill-mode-for-an-animation\">#</a> The fill-mode For an Animation</h2>\n<div class=\"note info\">\n<p>在播放第一個 <code>@keyframes</code>  之前或播放最後一個 <code>@keyframes</code>  之後，CSS 動畫不會影響元素。 <code>animation-fill-mode</code>  可以覆蓋此行為。</p>\n<p><code>animation-fill-mode</code>  指定動畫未播放時 (開始前、結束後或兩者) 目標元素的樣式。</p>\n</div>\n<div class=\"note danger\">\n<p><strong>Value</strong></p>\n<ul>\n<li><code>none</code>  - Default value. 動畫在執行前後不會對元素應用任何樣式。</li>\n<li><code>forwards</code>  - 元素將保留最後一個 <code>@keyframes</code>  設置的樣式值 (取決於動畫方向和動畫迭代次數)。</li>\n<li><code>backwards</code>  - 元素將獲得第一個 <code>@keyframes</code>  設置的樣式值（取決於動畫方向），並在動畫延遲期間保留它。</li>\n<li><code>both</code>  - 動畫將遵循向前和向後的規則，在兩個方向上擴展動畫屬性。</li>\n</ul>\n</div>\n<div class=\"links\"><div class=\"item\" title=\"Example 1\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfYW5pbWF0aW9uX2ZpbGwtbW9kZQ==\" data-background-image=\"/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfYW5pbWF0aW9uX2ZpbGwtbW9kZQ==\">Example 1</span>\n          <p class=\"desc\">讓元素保留最後一個動畫樣式</p>\n          </div></div><div class=\"item\" title=\"Example 2\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfYW5pbWF0aW9uX2ZpbGwtbW9kZTI=\" data-background-image=\"/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfYW5pbWF0aW9uX2ZpbGwtbW9kZTI=\">Example 2</span>\n          <p class=\"desc\">讓元素獲得最後一個動畫樣式</p>\n          </div></div><div class=\"item\" title=\"Example 3\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfYW5pbWF0aW9uX2ZpbGwtbW9kZTM=\" data-background-image=\"/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzczNfYW5pbWF0aW9uX2ZpbGwtbW9kZTM=\">Example 3</span>\n          <p class=\"desc\">讓元素在動畫開始前獲取第一個設置的樣式，並在動畫結束時保留最後一個樣式</p>\n          </div></div></div>\n<h2 id=\"animation-shorthand-property\"><a class=\"anchor\" href=\"#animation-shorthand-property\">#</a> Animation Shorthand Property</h2>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> animation-name animation-duration animation-timing-function animation-delay animation-iteration-count animation-direction<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> example 5s linear 2s infinite alternate<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "Web",
                "CSS",
                "Web",
                "CSS"
            ]
        },
        {
            "id": "https://chienikao.github.io/2023/04/18/Web/CSS/CSS%20-%20RWD%20(Responsive%20Web%20Design)/",
            "url": "https://chienikao.github.io/2023/04/18/Web/CSS/CSS%20-%20RWD%20(Responsive%20Web%20Design)/",
            "title": "CSS - RWD (Responsive Web Design)",
            "date_published": "2023-04-17T16:00:00.000Z",
            "content_html": "<div class=\"note info\">\n<p><strong>RWD (響應式網頁)</strong> 讓我們的網頁在各裝置都能漂亮的呈現，能夠適應不同大小的螢幕。</p>\n</div>\n<h2 id=\"rwd-viewport\"><a class=\"anchor\" href=\"#rwd-viewport\">#</a> RWD Viewport</h2>\n<div class=\"note info\">\n<p>就是視窗的意思，使用者能看到的頁面範圍。</p>\n</div>\n<h3 id=\"setting-the-viewport\"><a class=\"anchor\" href=\"#setting-the-viewport\">#</a> Setting the Viewport</h3>\n<p>使用 HTML <font> <code>&lt;meta&gt;</code> </font> 標籤。</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&lt;meta name=<span class=\"token string\">\"viewport\"</span> content=<span class=\"token string\">\"width=device-width, initial-scale=1.0\"</span>></pre></td></tr></table></figure><div class=\"note danger no-icon\">\n<ul>\n<li><font> <code>width=device-width</code> </font> 設定視窗的寬度跟隨裝置的螢幕寬度。</li>\n<li><font> <code>initial-scale=1.0</code> </font> 設定初始的視窗縮放比例，1 表示為 100%。</li>\n</ul>\n</div>\n<h2 id=\"grid-view\"><a class=\"anchor\" href=\"#grid-view\">#</a> Grid View</h2>\n<div class=\"links\"><div class=\"item\" title=\"grid 小遊戲\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9jc3NncmlkZ2FyZGVuLmNvbS8jemgtdHc=\" data-background-image=\"/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9jc3NncmlkZ2FyZGVuLmNvbS8jemgtdHc=\">grid 小遊戲</span>\n          <p class=\"desc\">https://cssgridgarden.com/#zh-tw</p>\n          </div></div></div>\n<p>我們將網頁分成<strong>網格 (rows, Columns)</strong> 來看，這讓我們更方便的排版。</p>\n<p><img data-src=\"https://i.imgur.com/fKyOOXR.png\" alt=\"\"></p>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5cmVzcG9uc2l2ZV9ncmlkLmh0bQ==\">A responsive grid-view often has 12 columns, and has a total width of 100%, and will shrink and expand as you resize the browser window.</span></p>\n</blockquote>\n<h3 id=\"building-a-responsive-grid-view\"><a class=\"anchor\" href=\"#building-a-responsive-grid-view\">#</a> Building a Responsive Grid-View</h3>\n<p>首先，將所有 HTML 元素都設置成 <font> <code>border-box</code> </font>，確保 <em><strong>padding</strong></em> 和 <em><strong>border</strong></em> 都將算在總寬度和總高度內。</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">*</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">box-sizing</span><span class=\"token punctuation\">:</span> border-box<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>設置 12 行的方法如下:</p>\n<ul>\n<li>每行寬度: 100% / 12 columns = 8.33%</li>\n<li>建立一個類別定義 12 種寬度 <font> <code>class = &quot;col-&quot;</code> </font>，用數字編號來代表要延伸幾格。</li>\n</ul>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeXJlc3BvbnNpdmVfY29scw==\">Example</span></p>\n<p>一次定義好每個寬度都要有的樣式。</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">[class*=\"col-\"]</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 15px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid red<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>數字編號表示拓展幾格。</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">.col-1</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 8.33%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token selector\">.col-2</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 16.66%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token selector\">.col-3</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 25%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token selector\">.col-4</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 33.33%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token selector\">.col-5</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 41.66%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token selector\">.col-6</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token selector\">.col-7</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 58.33%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token selector\">.col-8</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 66.66%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token selector\">.col-9</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 75%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token selector\">.col-10</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 83.33%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token selector\">.col-11</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 91.66%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token selector\">.col-12</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>由於 columns 都設置了 <font> <code>floating: left</code> </font> 的關係，其他元素將會當他們不存在。為了避免這種狀況，我們設置以下樣式來<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrbWQuaW8vQENoaWVuSS9jc3NfZmxvYXQjVGhlLWNsZWFyZml4LUhhY2s=\">清除浮動</span>。</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">row::after</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">clear</span><span class=\"token punctuation\">:</span> both<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> table<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeXJlc3BvbnNpdmVfc3R5bGVz\">Example</span></p>\n<h2 id=\"media-query\"><a class=\"anchor\" href=\"#media-query\">#</a> Media Query</h2>\n<p><font> <code>@media</code> </font> 區塊定義某些條件下要套用的 CSS 樣式。</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeXJlc3BvbnNpdmVfbWVkaWFxdWVyeQ==\">links</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token keyword\">only</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 600px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token selector\">body</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> lightblue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"add-a-breakpoint\"><a class=\"anchor\" href=\"#add-a-breakpoint\">#</a> Add a Breakpoint</h3>\n<p>設置<strong>中斷點</strong>來區隔不同裝置上要套用的樣式。</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeXJlc3BvbnNpdmVfYnJlYWtwb2ludHM=\">links</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* For desktop: */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token selector\">.col-1</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 8.33%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token selector\">.col-2</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 16.66%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token selector\">.col-3</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 25%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token selector\">.col-4</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 33.33%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token selector\">.col-5</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 41.66%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token selector\">.col-6</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token selector\">.col-7</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 58.33%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token selector\">.col-8</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 66.66%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token selector\">.col-9</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 75%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token selector\">.col-10</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 83.33%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token selector\">.col-11</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 91.66%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token selector\">.col-12</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token keyword\">only</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 768px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token comment\">/* For mobile phones: */</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token selector\">[class*=\"col-\"]</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>我們也可以設置多個中斷點來適應更多不同的裝置。</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeXJlc3BvbnNpdmVfY29sLXM=\">links</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* For mobile phones: */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token selector\">[class*=\"col-\"]</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token keyword\">only</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 600px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token comment\">/* For tablets: */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token selector\">.col-s-1</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 8.33%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token selector\">.col-s-2</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 16.66%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token selector\">.col-s-3</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 25%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token selector\">.col-s-4</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 33.33%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token selector\">.col-s-5</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 41.66%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token selector\">.col-s-6</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token selector\">.col-s-7</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 58.33%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token selector\">.col-s-8</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 66.66%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token selector\">.col-s-9</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 75%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token selector\">.col-s-10</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 83.33%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token selector\">.col-s-11</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 91.66%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token selector\">.col-s-12</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token keyword\">only</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 768px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token comment\">/* For desktop: */</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token selector\">.col-1</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 8.33%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token selector\">.col-2</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 16.66%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token selector\">.col-3</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 25%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token selector\">.col-4</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 33.33%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token selector\">.col-5</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 41.66%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token selector\">.col-6</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token selector\">.col-7</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 58.33%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token selector\">.col-8</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 66.66%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token selector\">.col-9</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 75%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token selector\">.col-10</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 83.33%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token selector\">.col-11</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 91.66%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token selector\">.col-12</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"typical-device-breakpoints\"><a class=\"anchor\" href=\"#typical-device-breakpoints\">#</a> Typical Device Breakpoints</h3>\n<p>市面上大大小小的裝置太多了，很難準確定義出精準的中斷點，這裡有五個比較簡單區分的中斷點。</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeXJlc3BvbnNpdmVfbWVkaWFxdWVyeV9icmVha3BvaW50cw==\">links</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* Extra small devices (phones, 600px and down) */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token keyword\">only</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 600px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">&#123;</span>...<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">/* Small devices (portrait tablets and large phones, 600px and up) */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token keyword\">only</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 600px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">&#123;</span>...<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">/* Medium devices (landscape tablets, 768px and up) */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token keyword\">only</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 768px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">&#123;</span>...<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">/* Large devices (laptops/desktops, 992px and up) */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token keyword\">only</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 992px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">&#123;</span>...<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">/* Extra large devices (large laptops and desktops, 1200px and up) */</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token keyword\">only</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 1200px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">&#123;</span>...<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"orientation-portrait-landscape\"><a class=\"anchor\" href=\"#orientation-portrait-landscape\">#</a> Orientation: Portrait / Landscape</h3>\n<div class=\"note info\">\n<ul>\n<li><font> <code>portrait</code> </font> : 當螢幕的<strong>寬度小於高度</strong>的時候套用。</li>\n<li><font> <code>landscape</code> </font> : 當螢幕的<strong>寬度大於高度</strong>的時候套用。</li>\n</ul>\n</div>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeXJlc3BvbnNpdmVfbWVkaWFxdWVyeV9vcmllbnRhdGlvbjI=\">links</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token keyword\">only</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">orientation</span><span class=\"token punctuation\">:</span> landscape<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token selector\">body</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> lightblue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"hide-elements\"><a class=\"anchor\" href=\"#hide-elements\">#</a> Hide Elements</h3>\n<ul>\n<li>另一個常用的方法就是在不同螢幕大小下，<strong>顯示 / 隱藏</strong>元素。</li>\n<li>利用 <font> <code>display</code> </font>。</li>\n</ul>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzc19tZWRpYXF1ZXJpZXNfaGlkZTI=\">links</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* If the screen size is 600px wide or less, hide the element */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token keyword\">only</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 600px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token selector\">div.example</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"change-font-size\"><a class=\"anchor\" href=\"#change-font-size\">#</a> Change Font Size</h3>\n<p>當然，調整字體大小也是一定要的。</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>Example</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9jc3MvdHJ5aXQuYXNwP2ZpbGVuYW1lPXRyeWNzc19tZWRpYXF1ZXJpZXNfZm9udHNpemUy\">links</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* If the screen size is 601px or more, set the font-size of &lt;div> to 80px */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token keyword\">only</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 601px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token selector\">div.example</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 80px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">/* If the screen size is 600px or less, set the font-size of &lt;div> to 30px */</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token keyword\">only</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 600px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token selector\">div.example</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 30px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "Web",
                "CSS",
                "Web",
                "CSS",
                "RWD"
            ]
        },
        {
            "id": "https://chienikao.github.io/2023/04/18/leetcode/easy/1768%20Merge%20Strings%20Alternately/",
            "url": "https://chienikao.github.io/2023/04/18/leetcode/easy/1768%20Merge%20Strings%20Alternately/",
            "title": "1768. Merge Strings Alternately",
            "date_published": "2023-04-17T16:00:00.000Z",
            "content_html": "<h2 id=\"題目敘述\"><a class=\"anchor\" href=\"#題目敘述\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbWVyZ2Utc3RyaW5ncy1hbHRlcm5hdGVseS8=\">題目敘述</span></h2>\n<p>You are given two strings  <code>word1</code>  and  <code>word2</code> . Merge the strings by adding letters in alternating order, starting with  <code>word1</code> . If a string is longer than the other, append the additional letters onto the end of the merged string.</p>\n<p>Return <em>the merged string</em>.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input</strong>: word1 = “abc”, word2 = “pqr”<br>\n<strong>Output</strong>: “apbqcr”<br>\n<strong>Explanation</strong>: The merged string will be merged as so:<br>\nword1:  a   b   c<br>\nword2:    p   q   r<br>\nmerged: a p b q c r</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input</strong>: word1 = “ab”, word2 = “pqrs”<br>\n<strong>Output</strong>: “apbqrs”<br>\n<strong>Explanation</strong>: Notice that as word2 is longer, “rs” is appended to the end.<br>\nword1:  a   b<br>\nword2:    p   q   r   s<br>\nmerged: a p b q   r   s</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3</h3>\n<blockquote>\n<p><strong>Input</strong>: word1 = “abcd”, word2 = “pq”<br>\n<strong>Output</strong>: “apbqcd”<br>\n<strong>Explanation</strong>: Notice that as word1 is longer, “cd” is appended to the end.<br>\nword1:  a   b   c   d<br>\nword2:    p   q<br>\nmerged: a p b q c   d</p>\n</blockquote>\n<h2 id=\"程式碼\"><a class=\"anchor\" href=\"#程式碼\">#</a> 程式碼</h2>\n<div class=\"tab\" data-id=\"code\" data-title=\"cpp\">\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    string <span class=\"token function\">mergeAlternately</span><span class=\"token punctuation\">(</span>string word1<span class=\"token punctuation\">,</span> string word2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       string res <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       <span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> word1<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">=</span> word2<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>       <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>       <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> m <span class=\"token operator\">&amp;&amp;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>           res <span class=\"token operator\">+=</span> word1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>           i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>           res <span class=\"token operator\">+=</span> word2<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>           j<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">!=</span> m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>           <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> res <span class=\"token operator\">+=</span> word1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>           <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> res <span class=\"token operator\">+=</span> word2<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>       <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"code\" data-title=\"python\">\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">mergeAlternately</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> word1<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> word2<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        m<span class=\"token punctuation\">,</span> n <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>word1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>word2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        res <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        i<span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;</span> m <span class=\"token keyword\">and</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            res <span class=\"token operator\">+=</span> word1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            res <span class=\"token operator\">+=</span> word2<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            j <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span> i <span class=\"token operator\">!=</span> m<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                res <span class=\"token operator\">+=</span> word1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">while</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                res <span class=\"token operator\">+=</span> word2<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                j <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> res</pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"code\" data-title=\"java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">mergeAlternately</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> word1<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> word2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">String</span> res <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> word1<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">=</span> word2<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> m <span class=\"token operator\">&amp;&amp;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            res <span class=\"token operator\">+=</span> word1<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            res <span class=\"token operator\">+=</span> word2<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            j<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">!=</span> m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span>m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> res <span class=\"token operator\">+=</span> word1<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> res <span class=\"token operator\">+=</span> word2<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n",
            "tags": [
                "leetcode",
                "Easy",
                "Easy",
                "String",
                "Two Pointers"
            ]
        },
        {
            "id": "https://chienikao.github.io/2023/04/18/uva/star1/uva%201587%20-%20Box/",
            "url": "https://chienikao.github.io/2023/04/18/uva/star1/uva%201587%20-%20Box/",
            "title": "uva 1587 - Box",
            "date_published": "2023-04-17T16:00:00.000Z",
            "content_html": "<p><strong>Time limit: 3.000 seconds</strong></p>\n<h2 id=\"題目連結\"><a class=\"anchor\" href=\"#題目連結\">#</a> 題目連結</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96ZXJvanVkZ2UudHcvU2hvd1Byb2JsZW0/cHJvYmxlbWlkPWU1MzQ=\">ZeroJudge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvZXh0ZXJuYWwvMTUvcDE1ODcucGRm\">題目連結</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvaW5kZXgucGhwP29wdGlvbj1jb21fb25saW5lanVkZ2UmYW1wO0l0ZW1pZD04JmFtcDtjYXRlZ29yeT00NDgmYW1wO3BhZ2U9c2hvd19wcm9ibGVtJmFtcDtwcm9ibGVtPTQ0NjI=\">Online Judge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudWRlYnVnLmNvbS9VVmEvMTU4Nw==\">uDebug</span></li>\n</ul>\n<h2 id=\"解題技巧\"><a class=\"anchor\" href=\"#解題技巧\">#</a> 解題技巧</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vc3ByZWFkc2hlZXRzL2QvMWo3NEdFQ2ZuTTBMM042TEpwNEY0Q2FfLXljY3hFNlJpaWp0YmZDLWRNamcvZWRpdD91c3A9c2hhcmluZw==\">解題 / 紀錄</span></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Box</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> wid<span class=\"token punctuation\">,</span> hgt<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token function\">cmp</span><span class=\"token punctuation\">(</span>Box a<span class=\"token punctuation\">,</span> Box b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>wid <span class=\"token operator\">!=</span> b<span class=\"token punctuation\">.</span>wid<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span>wid <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">.</span>wid<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span>hgt <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">.</span>hgt<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>cin <span class=\"token operator\">>></span> w <span class=\"token operator\">>></span> h<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        box<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>wid <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>hgt <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            cin <span class=\"token operator\">>></span> w <span class=\"token operator\">>></span> h<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>wid <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>hgt <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">,</span> box <span class=\"token operator\">+</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> cmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>wid <span class=\"token operator\">==</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>wid <span class=\"token operator\">&amp;&amp;</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>wid <span class=\"token operator\">==</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>wid <span class=\"token operator\">&amp;&amp;</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>wid <span class=\"token operator\">==</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>wid <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            box<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>hgt <span class=\"token operator\">==</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>hgt <span class=\"token operator\">&amp;&amp;</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>hgt <span class=\"token operator\">==</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>hgt <span class=\"token operator\">&amp;&amp;</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>hgt <span class=\"token operator\">==</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>hgt <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            box<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>hgt <span class=\"token operator\">==</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>hgt <span class=\"token operator\">&amp;&amp;</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>hgt <span class=\"token operator\">==</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>wid <span class=\"token operator\">&amp;&amp;</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>wid <span class=\"token operator\">==</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>wid<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"POSSIBLE\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"IMPOSSIBLE\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "UVA",
                "Star1",
                "Star1",
                "CPE",
                "UVA"
            ]
        }
    ]
}